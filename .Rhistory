df.new <- cbind(df.new, predict(m.gen.abund, se.fit = T, newdata = df.new))
ggplot(df.new, aes(x=Biotope_type, y=fit)) +
geom_point(color="red") +
geom_errorbar(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), width=.2, color="red") +
geom_jitter(data=df, aes(y=Generalist_Abun), alpha=.3, width=.2)
## mutliple comparisons
summary(glht(m.gen.abund, linfct = mcp(Biotope_type = "Tukey")))
# Specialist richness -----------------------------------------------------------------------------
## Linear model
m.spec.rich <- lm(Specialist_Rich ~ Biotope_type + Elev, data=df)
summary(m.spec.rich)
par(mfrow=c(2,2)); plot(m.spec.rich); par(mfrow=c(1,1))
ggplot(df, aes(x=Specialist_Rich)) +
geom_histogram(binwidth = 1, color="white") +
facet_wrap(~Biotope_type)
drop1(m.spec.rich, test="F")
## comparison with GLM
m2.spec.rich <- glm(Specialist_Rich ~ Biotope_type + Elev, data=df, family="poisson")
summary(m2.spec.rich)
check_overdispersion(m2.spec.rich)
AIC(m.spec.rich,m2.spec.rich)
## effect plot
df.new <- data.frame(
Biotope_type = levels(df$Biotope_type),
Elev = mean(df$Elev)
)
df.new <- cbind(df.new, predict(m.spec.rich, se.fit = T, newdata = df.new))
ggplot(df.new, aes(x=Biotope_type, y=fit)) +
geom_point(color="red") +
geom_errorbar(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), width=.2, color="red") +
geom_jitter(data=df, aes(y=Specialist_Rich), alpha=.3, width=.2)
## mutliple comparisons
summary(glht(m.spec.rich, linfct = mcp(Biotope_type = "Tukey")))
# Specialist abundance -----------------------------------------------------------------------------
## Linear model
m.spec.abund <- lm(Specialist_Abun ~ Biotope_type + Elev, data=df)
summary(m.spec.abund)
par(mfrow=c(2,2)); plot(m.spec.abund); par(mfrow=c(1,1))
ggplot(df, aes(x=Specialist_Abun)) +
geom_histogram(binwidth = 1, color="white") +
facet_wrap(~Biotope_type)
drop1(m.spec.abund, test="F")
## comparison with GLM
m2.spec.abund <- glm(Specialist_Abun ~ Biotope_type + Elev, data=df, family="poisson")
summary(m2.spec.abund)
check_overdispersion(m2.spec.abund)
AIC(m.spec.abund,m2.spec.abund)
## effect plot
df.new <- data.frame(
Biotope_type = levels(df$Biotope_type),
Elev = mean(df$Elev)
)
df.new <- cbind(df.new, predict(m.spec.abund, se.fit = T, newdata = df.new))
ggplot(df.new, aes(x=Biotope_type, y=fit)) +
geom_point(color="red") +
geom_errorbar(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), width=.2, color="red") +
geom_jitter(data=df, aes(y=Specialist_Abun), alpha=.3, width=.2)
## mutliple comparisons
summary(glht(m.spec.abund, linfct = mcp(Biotope_type = "Tukey")))
# Red List richness --------------------------------------------------------------------------------
## Linear model
m.rl.rich <- lm(RedList_Rich ~ Biotope_type + Elev, data=df)
summary(m.rli)
par(mfrow=c(2,2)); plot(m.rl.rich); par(mfrow=c(1,1))
ggplot(df, aes(x=RedList_Rich)) +
geom_histogram(binwidth = 1, color="white") +
facet_wrap(~Biotope_type)
drop1(m.rl.rich, test="F")
## comparison with GLM
m2.rl.rich <- glm(RedList_Rich ~ Biotope_type + Elev, data=df, family="poisson")
summary(m2.rl.rich)
check_overdispersion(m2.rl.rich)
AIC(m.rl.rich,m2.rl.rich)
drop1(m2.rl.rich, test="LR")
# Red List abundance -------------------------------------------------------------------------------
## Linear model
m.rl.abund <- lm(RedList_Abun ~ Biotope_type + Elev, data=df)
summary(m.rli)
par(mfrow=c(2,2)); plot(m.rl.abund); par(mfrow=c(1,1))
ggplot(df, aes(x=RedList_Abun)) +
geom_histogram(binwidth = 1, color="white") +
facet_wrap(~Biotope_type)
drop1(m.rl.abund, test="F")
## comparison with GLM
m2.rl.abund <- glm(RedList_Abun ~ Biotope_type + Elev, data=df, family="poisson")
summary(m2.rl.abund)
check_overdispersion(m2.rl.abund)
AIC(m.rl.abund,m2.rl.abund)
drop1(m2.rl.abund, test="LR")
# Rarity index -------------------------------------------------------------------------------------
## Linear model
m.rarin <- lm(Rarity_index ~ Biotope_type + Elev, data=df)
summary(m.rarin)
par(mfrow=c(2,2)); plot(m.rarin); par(mfrow=c(1,1))
ggplot(df, aes(x=Rarity_index)) +
geom_histogram(binwidth = 1, color="white") +
facet_wrap(~Biotope_type)
drop1(m.rarin, test="F")
# Saving the models --------------------------------------------------------------------------------
models <- list(m.tot.rich, m.spec.rich, m.gen.rich, m.can.rich, m.cav.rich, m.gr.rich,
m.tot.abund, m.spec.abund, m.gen.abund, m.can.abund, m.cav.abund, m.gr.abund)
names(models) <- c("m.tot.rich", "m.spec.rich", "m.gen.rich", "m.can.rich", "m.cav.rich", "m.gr.rich",
"m.tot.abund", "m.spec.abund", "m.gen.abund", "m.can.abund", "m.cav.abund", "m.gr.abund")
save(models, file = "models.RData")
library(tidyverse)
library(car)
library(scales)
df <- read.table("data_disturbances.csv", header=T, sep=";") %>%
mutate(Biotope_type = factor(Biotope_type, levels = c("SSD", "LSD", "ELT", "NDF")))
responses <- c("Total_Rich", "Total_Abun", "Canopy_Rich", "Canopy_Abun", "Cavity_Rich", "Cavity_Abun",
"Ground_Shrub_Rich", "Ground_Shrub_Abun", "RedList_Rich", "RedList_Abun", "Rarity_index",
"Generalist_Rich", "Generalist_Abun", "Specialist_Rich", "Specialist_Abun")
predictors <- c("LiveTrees", "Complexity", "Understory", "Elev", "BioLegacy", "Windfalls")
# collinearity check
vif(lm(paste(responses[3], paste(paste("poly(", predictors, ",2)", sep=""), collapse = "+"), sep="~"), data=df))
corrplot::corrplot(cor((df[,predictors])), method="number")
predictors <- c("LiveTrees", "Complexity", "Understory", "Elev")
# fitting models -----------------------------------------------------------------------------------------------------
models <- lapply(responses, function(resp){
step(lm(paste(resp, paste(paste("poly(", predictors, ",2)", sep=""), collapse = "+"), sep="~"), data=df),
direction = "backward", trace=FALSE)
}) %>%
set_names(responses)
# r squared ----------------------------------------------------------------------------------------------------------
r2 <- sapply(models, function(m) summary(m)$r.squared)
data.frame(r2)
# coefficients -------------------------------------------------------------------------------------------------------
coefs <- do.call(rbind, lapply(1:length(responses), function(i) {
coef <- as.data.frame(summary(models[[i]])$coefficients)
coef$response <- responses[i]
coef
}))
# effects ------------------------------------------------------------------------------------------------------------
ndfs <- do.call(rbind, lapply(1:length(responses), function(i){
terms <- sapply(attr(models[[i]]$terms, "term.labels"), function(term) {
ifelse(grepl("poly", term), strsplit(substr(term, 6, 1000), ",")[[1]][1], term)
})
ndf <- do.call(rbind, lapply(terms, function(term){
nd <- data.frame(x=seq(min(df[,term]), max(df[,term]), l=100))
nd[,term] <- nd$x
for (trm in terms[terms!=term]) nd[,trm] <- mean(df[,trm])
nd$var <- term
nd$term <- names(terms[terms==term])
nd
}))
if (is.null(ndf)) {
ndff <- data.frame(fit=numeric(0), se.fit=numeric(0), df=numeric(0), residual.scale=numeric(0),
x=numeric(0), var=numeric(0), response=numeric(0), significance=numeric(0))
} else {
ndff <- as.data.frame(predict(models[[i]], se=T, newdata=ndf)) %>%
mutate(
x = ndf$x,
var = ndf$var,
response = responses[i],
term = ndf$term
) %>%
left_join(models[[i]] %>%
drop1(test="F") %>%
data.frame %>%
rownames_to_column("term") %>%
"["(2:nrow(.),c("term", "Pr..F."))) %>%
rename("Significance"="Pr..F.")
}
ndff
})) %>%
mutate(
type=ifelse(grepl("Rich", response),"Richness","Abundance"),
group=sapply(strsplit(response, "_"), function(.) .[1]),
var = factor(var, levels=c("Elev", "Complexity", "LiveTrees", "Understory", "Windfalls"),
labels = c("Elevation\n(m a.s.l.)", "Structural complexity\n(score)", "Live trees density\n(trees/ha)",
"Understory\n(%)", "Windfalls")),
group = factor(group, levels=c("Total","Canopy","Cavity","Ground","Generalist","Specialist","RedList","Rarity"),
labels = c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters",
"Generalists", "Specialists", "Red List species", "Rarity index"))
)
# all predictors
ggplot(ndfs, aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
facet_grid(type~var, scales="free") +
scale_fill_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
scale_color_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
labs(x="", y="Species richness / abundance", color="", fill="") +
theme_bw()
# Generalists, specialists
ggplot(ndfs %>% filter(group %in% c("Generalists", "Specialists")) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) + #, lty=Significance>.05)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
scale_color_manual(values=c("#0072B2", "#E69F00")) +
scale_fill_manual(values=c("#0072B2", "#E69F00")) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_genspec.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters") &
Significance<.05) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species abundance / richness", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_genspec_significant_only.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters")) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group, lty=Significance>.05)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
scale_linetype_manual(values=c(1,2), labels=c("Significant", "Non-significant")) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_nesting.png", height = 16, width = 22, units = "cm", dpi=300)
# anova tables -------------------------------------------------------------------------------------------------------
anovas <- do.call(rbind, lapply(1:length(responses), function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
rownames_to_column("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)")) %>%
mutate(
response = responses[i]
)
}))
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.habitat.characteristics.csv", row.names = F, sep=",")
anovas.p <- anovas%>%
dplyr::select(c("predictor","p.value","response")) %>%
pivot_wider(names_from = predictor, values_from = p.value)
View(anovas.p)
library(tidyverse)
library(multcomp)
library(multcompView)
load("models.RData")
m.rich <- models[names(models)[grepl("rich", names(models))]]
m.abund <- models[names(models)[grepl("abund", names(models))]]
m <- models$m.tot.rich
# tables of coefficients
m.rich %>%
lapply(function(m){
summary(m)$coef %>%
round(4) %>%
as.data.frame() %>%
"["(,-3) %>%
rownames_to_column("term")
}) %>%
reduce(left_join, by="term") %>%
write.table("coef.rich.csv", row.names = F, sep=",")
m.abund %>%
lapply(function(m){
summary(m)$coef %>%
round(4) %>%
as.data.frame() %>%
"["(,-3) %>%
rownames_to_column("term")
}) %>%
reduce(left_join, by="term") %>%
write.table("coef.abund.csv", row.names = F, sep=",")
# anova tables
m.rich %>%
lapply(function(m){
car::Anova(m)[1:2,3:4] %>%
round(4) %>%
as.data.frame() %>%
rownames_to_column("term")
}) %>%
reduce(left_join, by="term") %>%
rbind(m.abund %>%
lapply(function(m){
car::Anova(m)[1:2,3:4] %>%
round(4) %>%
as.data.frame() %>%
rownames_to_column("term")
}) %>%
reduce(left_join, by="term")) %>%
write.table("anova.csv", row.names = F, sep=",")
# biotope types --------------------------------------------------------------------------------------
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters")),
habitat = factor(Biotope_type, levels = c("MD", "VD", "ZPS", "ZPZ"),
labels = c("SSD", "LSD", "ELT", "NDF"))) %>%
ggplot(aes(x=habitat, y=fit)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=.2) +
geom_text(aes(y=lwr - 0.5, label = letter), size=2) +
facet_grid(group~response) +
labs(x="Habitat type", y="Species abundance / richness") +
theme_bw()
ggsave("habitat_models.png", dpi=600, height = 16, width = 22, units = "cm")
# multiple comparisons ----------------------------------------------------------------------------------
lapply(m.rich, function(m){
t <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))$test
data.frame(
pair = names(t$coefficients),
diff = round(t$coefficients,4),
se = round(t$sigma,4),
p = round(t$pvalues,4)
)
}) %>%
reduce(left_join, by="pair") %>%
rbind(lapply(m.abund, function(m){
t <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))$test
data.frame(
pair = names(t$coefficients),
diff = round(t$coefficients,4),
se = round(t$sigma,4),
p = round(t$pvalues,4)
)
}) %>%
reduce(left_join, by="pair")) %>%
write.table("multcomp.csv", row.names = F, sep = ",")
names(m.rich)
# biotope types --------------------------------------------------------------------------------------
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters")),
habitat = factor(Biotope_type, levels = c("MD", "VD", "ZPS", "ZPZ"),
labels = c("SSD", "LSD", "ELT", "NDF"))) %>%
ggplot(aes(x=habitat, y=fit)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=.2) +
geom_text(aes(y=lwr - 0.5, label = letter), size=2) +
facet_grid(group~response) +
labs(x="Habitat type", y="Species abundance / richness") +
theme_bw()
names(df)
m <- models[[1]]
pr <- predict(m, newdata = nd, se=T)
unique(df$Biotope_type)
# biotope types --------------------------------------------------------------------------------------
nd <- data.frame(Biotope_type=unique(df$Biotope_type),
Elev=mean(df$Elev))
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters")),
habitat = factor(Biotope_type, levels = c("MD", "VD", "ZPS", "ZPZ"),
labels = c("SSD", "LSD", "ELT", "NDF"))) %>%
ggplot(aes(x=habitat, y=fit)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=.2) +
geom_text(aes(y=lwr - 0.5, label = letter), size=2) +
facet_grid(group~response) +
labs(x="Habitat type", y="Species abundance / richness") +
theme_bw()
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters"))) %>%
ggplot(aes(x=Biotope_type, y=fit)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=.2) +
geom_text(aes(y=lwr - 0.5, label = letter), size=2) +
facet_grid(group~response) +
labs(x="Habitat type", y="Species abundance / richness") +
theme_bw()
unique(df$Biotope_type)
nd$Biotope_type
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters"))) %>% pull(Biotope_type)
models %>%
names %>%
lapply(function(nm){
m <- models[[nm]]
pr <- predict(m, newdata = nd, se=T)
smcp <- summary(glht(m, linfct = mcp(Biotope_type="Tukey")))
pvs <- smcp$test$pvalues
names(pvs) <- str_replace_all(names(smcp$test$coefficients), " ", "")
ltrs <- data.frame(multcompLetters(pvs)$Letters) %>%
set_names("letter") %>%
rownames_to_column("Biotope_type")
ndd <- nd %>%
mutate(fit=pr$fit, lwr=pr$fit - 1.96*pr$se.fit, upr=pr$fit + 1.96*pr$se.fit, model=nm) %>%
left_join(ltrs)
ndd
}) %>%
bind_rows() %>%
mutate(group = factor(ifelse(grepl(".rich", model), "Richness", "Abundance"), levels = c("Richness", "Abundance")),
response = sub("m.", "", sub(".abund","",sub(c(".rich"),"",model))) %>%
factor(levels=c("tot","spec","gen","can","cav","gr"),
labels=c("All species", "Specialists", "Generalists", "Canopy nesters",
"Cavity nesters", "Ground/Shrub nesters")),
Biotope_type = factor(Biotope_type, levels = c("SSD", "LSD", "ELT", "NDF"))) %>%
ggplot(aes(x=Biotope_type, y=fit)) +
geom_point() +
geom_errorbar(aes(ymin=lwr, ymax=upr), width=.2) +
geom_text(aes(y=lwr - 0.5, label = letter), size=2) +
facet_grid(group~response) +
labs(x="Habitat type", y="Species abundance / richness") +
theme_bw()
ggsave("habitat_models.png", dpi=600, height = 16, width = 22, units = "cm")
