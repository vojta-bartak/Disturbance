group=sapply(strsplit(response, "_"), function(.) .[1]),
var = factor(var, levels=c("Elev", "Complexity", "LiveTrees", "Understory", "Windfalls"),
labels = c("Elevation\n(m a.s.l.)", "Structural complexity\n(score)", "Live trees density\n(trees/ha)",
"Understory\n(%)", "Windfalls")),
group = factor(group, levels=c("Total","Canopy","Cavity","Ground","Generalist","Specialist","RedList","Rarity"),
labels = c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters",
"Generalists", "Specialists", "Red List species", "Rarity index"))
)
ggplot(ndfs, aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
facet_grid(type~var, scales="free") +
scale_fill_manual(values=c(hue_pal()(5), "grey40", "grey80")) +
scale_color_manual(values=c(hue_pal()(5), "grey40", "grey80")) +
labs(x="", y="Species richness / abundance", color="", fill="") +
theme_bw()
ggplot(ndfs, aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
facet_grid(type~var, scales="free") +
scale_fill_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
scale_color_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
labs(x="", y="Species richness / abundance", color="", fill="") +
theme_bw()
ggplot(ndfs %>% filter(group %in% c("All species", "Generalists", "Specialists")),
aes(x=x, y=fit, lty=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA, fill="grey") +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", lty="") +
theme_bw()
ggplot(ndfs %>% filter(group %in% c("Generalists", "Specialists")) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) + #, lty=Significance>.05)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
scale_color_manual(values=c("#0072B2", "#E69F00")) +
scale_fill_manual(values=c("#0072B2", "#E69F00")) +
#scale_linetype_manual(values=c(1,2), labels=c("Significant", "Non-significant")) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_genspec.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters") &
Significance<.05) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species abundance / richness", color="", fill="", lty="") +
theme_bw()
predictors <- c("LiveTrees", "Complexity", "Understory", "Elev")
# fitting models -----------------------------------------------------------------------------------------------------
models <- lapply(responses, function(resp){
step(lm(paste(resp, paste(paste("poly(", predictors, ",2)", sep=""), collapse = "+"), sep="~"), data=df),
direction = "backward", trace=FALSE)
}) %>%
set_names(responses)
# r squared ----------------------------------------------------------------------------------------------------------
r2 <- sapply(models, function(m) summary(m)$r.squared)
data.frame(r2)
# coefficients -------------------------------------------------------------------------------------------------------
coefs <- do.call(rbind, lapply(1:length(responses), function(i) {
coef <- as.data.frame(summary(models[[i]])$coefficients)
coef$response <- responses[i]
coef
}))
# effects ------------------------------------------------------------------------------------------------------------
ndfs <- do.call(rbind, lapply(1:length(responses), function(i){
terms <- sapply(attr(models[[i]]$terms, "term.labels"), function(term) {
ifelse(grepl("poly", term), strsplit(substr(term, 6, 1000), ",")[[1]][1], term)
})
ndf <- do.call(rbind, lapply(terms, function(term){
nd <- data.frame(x=seq(min(df[,term]), max(df[,term]), l=100))
nd[,term] <- nd$x
for (trm in terms[terms!=term]) nd[,trm] <- mean(df[,trm])
nd$var <- term
nd$term <- names(terms[terms==term])
nd
}))
if (is.null(ndf)) {
ndff <- data.frame(fit=numeric(0), se.fit=numeric(0), df=numeric(0), residual.scale=numeric(0),
x=numeric(0), var=numeric(0), response=numeric(0), significance=numeric(0))
} else {
ndff <- as.data.frame(predict(models[[i]], se=T, newdata=ndf)) %>%
mutate(
x = ndf$x,
var = ndf$var,
response = responses[i],
term = ndf$term
) %>%
left_join(models[[i]] %>%
drop1(test="F") %>%
data.frame %>%
rownames_to_column("term") %>%
"["(2:nrow(.),c("term", "Pr..F."))) %>%
rename("Significance"="Pr..F.")
}
ndff
})) %>%
mutate(
type=ifelse(grepl("Rich", response),"Richness","Abundance"),
group=sapply(strsplit(response, "_"), function(.) .[1]),
var = factor(var, levels=c("Elev", "Complexity", "LiveTrees", "Understory", "Windfalls"),
labels = c("Elevation\n(m a.s.l.)", "Structural complexity\n(score)", "Live trees density\n(trees/ha)",
"Understory\n(%)", "Windfalls")),
group = factor(group, levels=c("Total","Canopy","Cavity","Ground","Generalist","Specialist","RedList","Rarity"),
labels = c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters",
"Generalists", "Specialists", "Red List species", "Rarity index"))
)
# all predictors
ggplot(ndfs, aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
facet_grid(type~var, scales="free") +
scale_fill_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
scale_color_manual(values=c(hue_pal()(6), "grey40", "grey80")) +
labs(x="", y="Species richness / abundance", color="", fill="") +
theme_bw()
# Generalists, specialists
ggplot(ndfs %>% filter(group %in% c("Generalists", "Specialists")) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) + #, lty=Significance>.05)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
scale_color_manual(values=c("#0072B2", "#E69F00")) +
scale_fill_manual(values=c("#0072B2", "#E69F00")) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_genspec.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters") &
Significance<.05) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species abundance / richness", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_genspec_significant_only.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters")) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group, lty=Significance>.05)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
scale_linetype_manual(values=c(1,2), labels=c("Significant", "Non-significant")) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", color="", fill="", lty="") +
theme_bw()
ggsave("figR2_nesting.png", height = 16, width = 22, units = "cm", dpi=300)
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters") &
Significance<.05) %>%
mutate(type = factor(type, levels = c("Richness", "Abundance"))),
aes(x=x, y=fit, color=group, fill=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA) +
#  scale_size_manual(values = c(1,2)) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species abundance / richness", color="", fill="", lty="") +
theme_bw()
ggplot(ndfs %>% filter(group %in% c("All species", "Canopy nesters", "Cavity nesters", "Ground/Shrub nesters")),
aes(x=x, y=fit, lty=group)) +
geom_line() +
geom_ribbon(aes(ymin=fit-1.96*se.fit, ymax=fit+1.96*se.fit), alpha=.3, color=NA, fill="grey") +
scale_linetype_manual(values = c(1,2,3,6)) +
facet_grid(type~var, scales="free") +
labs(x="", y="Species richness / abundance", lty="") +
theme_bw()
# anova tables -------------------------------------------------------------------------------------------------------
anovas <- do.call(rbind, lapply(1:length(responses), function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)")) %>%
mutate(
response = responses[i]
#predictor = ifelse(grepl("poly", predictor), strsplit(substr(predictor, 6, 1000), ",")[[1]][1], predictor)
)
}))
# anova tables -------------------------------------------------------------------------------------------------------
anovas <- do.call(rbind, lapply(1:length(responses), function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
rownames_to_column("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)")) %>%
mutate(
response = responses[i]
#predictor = ifelse(grepl("poly", predictor), strsplit(substr(predictor, 6, 1000), ",")[[1]][1], predictor)
)
}))
# anova tables -------------------------------------------------------------------------------------------------------
anovas <- do.call(rbind, lapply(1:length(responses), function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
rownames_to_column("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)")) %>%
mutate(
response = responses[i]
)
}))
View(anovas)
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.other.vars.csv", row.names = F, sep=",")
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
dplyr::set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.other.vars.csv", row.names = F, sep=",")
?set_names
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
purrr::set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
purrr::set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.other.vars.csv", row.names = F, sep=",")
i=1
Anova(models[[i]])
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame()
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value"))
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.other.vars.csv", row.names = F, sep=",")
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.other.vars.csv", row.names = F, sep=",")
lapply(responses[grepl("_Rich", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor") %>%
rbind(lapply(responses[grepl("_Abun", responses)], function(i) {
Anova(models[[i]]) %>%
round(4) %>%
as.data.frame() %>%
set_names(c("Sum.sq", "Df", "F.value", "p.value")) %>%
dplyr::select("F.value", "p.value") %>%
add_rownames("predictor") %>%
filter(!predictor %in% c("Residuals", "(Intercept)"))
}) %>%
reduce(full_join, by="predictor")
) %>%
write.table("anova.habitat.characteristics.csv", row.names = F, sep=",")
anovas.p <- anovas%>%
dplyr::select(c("predictor","p.value","response")) %>%
pivot_wider(names_from = predictor, values_from = p.value)
View(anovas.p)
library(sjPlot)
library(factoextra)
library(tidyverse)
library(ranger)
library(caret)
library(gridExtra)
# data ------------------------------------------------------------------------------------------------
df <- read.table("data_disturbances.csv", header=T, sep=";") %>%
mutate(Biotope_type = factor(Biotope_type, levels = c("SSD", "LSD", "ELT", "NDF")))
predictors <- c("LiveTrees", "Complexity", "Understory", "Elev",
"BioLegacy", "Windfalls")
# PCA -------------------------------------------------------------------------------------------------
pca <- prcomp(df[,predictors], scale=T)
df <- cbind(df, pca$x)
fviz_pca_biplot(pca, geom.ind = "point", col.ind = df$Subtyp_final, addEllipses = T) +
theme_bw()
df <- cbind(df, pca$x)
# data ------------------------------------------------------------------------------------------------
df <- read.table("data_disturbances.csv", header=T, sep=";") %>%
mutate(Biotope_type = factor(Biotope_type, levels = c("SSD", "LSD", "ELT", "NDF")))
# PCA -------------------------------------------------------------------------------------------------
pca <- prcomp(df[,predictors], scale=T)
df <- cbind(df, pca$x)
fviz_pca_biplot(pca, geom.ind = "point", col.ind = df$Biotope_type, addEllipses = T) +
theme_bw()
ggsave("pca_1-2_ellipses.png", height = 14, width = 18, units = "cm", dpi = 300)
p12 <- fviz_pca_biplot(pca, geom.ind = "point",
col.ind = factor(df$Biotope_type, levels=c("MD", "VD", "ZPZ", "ZPS"),
labels=c("SSD", "LSD", "NDF", "ELT"))) +
theme_bw() +
labs(title="", x="PC1 (43.6%)", y="PC2 (24.8%)",
color="Habitat type", shape="Habitat type") +
lims(x=c(-5, 2.8)) +
theme(legend.position = "bottom")
p12 <- fviz_pca_biplot(pca, geom.ind = "point", col.ind = df$Biotope_type) +
theme_bw() +
labs(title="", x="PC1 (43.6%)", y="PC2 (24.8%)",
color="Habitat type", shape="Habitat type") +
lims(x=c(-5, 2.8)) +
theme(legend.position = "bottom")
p34 <- fviz_pca_biplot(pca, geom.ind = "point", axes = c(3,4), col.ind = df$Biotope_type) +
theme_bw() +
labs(title="", x="PC3 (16.0%)", y="PC4 (9.3%)",
color="Habitat type", shape="Habitat type") +
theme(legend.position = "bottom")
library(cowplot)
ggsave(plot=plot_grid(p12,p34), filename = "pca.png", dpi=300, width = 26, height = 14, units = "cm")
plot_grid(p12,p34)
ggsave(plot=plot_grid(p12,p34, ncol=2), filename = "pca.png", dpi=300, width = 26, height = 14, units = "cm")
p12 <- fviz_pca_biplot(pca, geom.ind = "point", col.ind = df$Biotope_type) +
theme_bw() +
labs(title="", x="PC1 (43.6%)", y="PC2 (24.8%)",
color="Habitat type", shape="Habitat type") +
lims(x=c(-5, 2.8)) +
theme(legend.position = "bottom")
p34 <- fviz_pca_biplot(pca, geom.ind = "point", axes = c(3,4), col.ind = df$Biotope_type) +
theme_bw() +
labs(title="", x="PC3 (16.0%)", y="PC4 (9.3%)",
color="Habitat type", shape="Habitat type") +
theme(legend.position = "bottom")
p12
p34
plot_grid(p12,p34)
ggsave(plot=cowplot::plot_grid(p12,p34), filename = "pca.png", dpi=300, width = 26, height = 14, units = "cm")
# Classification -----------------------------------------------------------------------------------
rf <- ranger(Biotope_type~., data = df[,c("Biotope_type",predictors)],
num.trees = 500,
mtry = 3,
min.node.size = 1,
max.depth = NULL,
write.forest = TRUE,
importance = "impurity_corrected")
rf$predictions
(cm1 <- confusionMatrix(rf$predictions, df$Biotope_type))
rf$variable.importance
pvi1 <- rf$variable.importance %>%
as.data.frame %>%
rename("importance" = ".") %>%
rownames_to_column("variable") %>%
arrange(desc(importance)) %>%
mutate(variable = factor(variable, levels = unique(variable)),
importance = 100*importance/sum(.$importance)) %>%
ggplot(aes(x=variable, y=importance)) +
geom_col() +
labs(y="Variable importance (%)", x="") +
theme_bw()
# PCA-based classification ----------------------------------------------------------------------------
dd <- data.frame(typ=df$Biotope_type, pca$x)
rf.pca <- ranger(typ~., data = dd,
num.trees = 500,
mtry = 3,
min.node.size = 5,
max.depth = NULL,
write.forest = TRUE,
importance = "impurity_corrected")
rf.pca <- ranger(typ~., data = dd,
num.trees = 500,
importance = "impurity")
rf.pca <- ranger(typ~., data = dd,
num.trees = 500,
mtry = 3,
min.node.size = 5,
max.depth = NULL,
write.forest = TRUE,
importance = "impurity_corrected")
rf.pca
(cm2 <- confusionMatrix(rf.pca$predictions, dd$typ))
rf.pca$variable.importance
pvi2 <- rf.pca$variable.importance %>%
as.data.frame %>%
rename("importance" = ".") %>%
rownames_to_column("variable") %>%
arrange(desc(importance)) %>%
mutate(variable = factor(variable, levels = unique(variable)),
importance = 100*importance/sum(.$importance)) %>%
ggplot(aes(x=variable, y=importance)) +
geom_col() +
labs(y="Variable importance (%)", x="") +
theme_bw()
ggsave(plot=cowplot::plot_grid(pvi1, pvi2), filename = "varimp.png", dpi=300, height = 12, width = 22, units = "cm")
pca %>% get_eig %>% rownames_to_column("variable") %>% ggplot(aes(x=variable, y=variance.percent)) + geom_col()
cm1$byClass %>%
t %>%
"["(c(1,2,8,9,11),) %>%
cbind(cm2$byClass %>%
t %>%
"["(c(1,2,8,9,11),)) %>%
round(3) %>%
as.data.frame() %>%
rownames_to_column("metric") %>%
write.table("confusion.matrix.csv", row.names = F, sep=",")
library(tidyverse)
library(multcompView)
load("models.RData")
m.rich <- models[names(models)[grepl("rich", names(models))]]
m.abund <- models[names(models)[grepl("abund", names(models))]]
m <- models$m.tot.rich
